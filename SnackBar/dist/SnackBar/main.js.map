{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-forms/add-forms.component.css","webpack:///./src/app/add-forms/add-forms.component.html","webpack:///./src/app/add-forms/add-forms.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/avatars/avatars.component.css","webpack:///./src/app/avatars/avatars.component.html","webpack:///./src/app/avatars/avatars.component.ts","webpack:///./src/app/model/upload-file.ts","webpack:///./src/app/service/avatar.service.ts","webpack:///./src/app/service/snack.service.ts","webpack:///./src/app/service/transaction.service.ts","webpack:///./src/app/snacks/snacks.component.css","webpack:///./src/app/snacks/snacks.component.html","webpack:///./src/app/snacks/snacks.component.ts","webpack:///./src/app/transactions/transactions.component.css","webpack:///./src/app/transactions/transactions.component.html","webpack:///./src/app/transactions/transactions.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,2sCAA2sC,2IAA2I,MAAM,aAAa,uT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvzC;AAGO;AACC;AACF;AAGR;AAOhD;IAQE,2BACU,aAA4B,EAC5B,YAA0B;QAFpC,iBAQC;QAPS,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QA4C5B,SAAI,GAAe,IAAI,6DAAU,EAAE,CAAC;QA1C1C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,gBAAM;YACzC,KAAI,CAAC,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC;YACpC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,qCAAS,GAAT;QAAA,iBAQC;QAPC,IAAM,MAAM,GAAW,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,gBAAM;YAClI,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,gBAAM;gBACzC,KAAI,CAAC,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC;gBACpC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YAC5C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAOC;QANC,IAAM,MAAM,GAAU,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,gBAAM;YACjJ,KAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,gBAAM;gBACvC,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;YACpC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAiB,CAAC;YACtC,MAAM,EAAE,wBAAwB;YAChC,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,wEAAiB,CAAC;YACnC,MAAM,EAAE,wBAAwB;YAChC,OAAO,EAAE,iBAAiB;YAC1B,OAAO,EAAE,iBAAiB;YAC1B,OAAO,EAAE,iBAAiB;SAC7B,CAAC,CAAC;IACJ,CAAC;IAIF,6CAAiB,GAAjB,UAAkB,CAAC;QACjB,IAAI,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,OAAO,GAAG,SAAS,CAAC;QACxB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC9B,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACxB,MAAM,CAAC;QACT,CAAC;QACD,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QAChC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,+CAAmB,GAAnB,UAAoB,CAAC;QACnB,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;IACxC,CAAC;IAvEU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAUyB,qEAAa;YACd,mEAAY;OAVzB,iBAAiB,CA0E7B;IAAD,wBAAC;CAAA;AA1E6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfW;AACc;AAEa;AACH;AACQ;AACG;AAE5E,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;IACvD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,gFAAiB,EAAE;IAC7C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,wEAAe,EAAE;IAClD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,0FAAqB,EAAE;CAC/D,CAAC;AAMF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;YACzC,OAAO,EAAE,CAAE,4DAAY,CAAE;SAC1B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACpB7B,mB;;;;;;;;;;;ACAA,mJAAmJ,SAAS,gE;;;;;;;;;;;;;;;;;;;;;ACAlH;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACoC;AAE9B;AACgB;AAKpC;AACiC;AACJ;AACF;AACc;AACJ;AACc;AACP;AACF;AAiCrE;IAAA;IAAyB,CAAC;IAAb,SAAS;QA9BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;gBAChB,wEAAe;gBACf,gFAAiB;gBACjB,2FAAqB;aACtB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,mEAAiB;gBACjB,iEAAe;gBACf,oEAAgB;gBAChB,qEAAgB;gBAChB,2DAAW;gBACX,mEAAmB;gBACnB,oEAAkB;gBAClB,gEAAc;gBACd,iEAAe;gBACf,+DAAa;gBACb,gEAAc;gBACd,oEAAkB;gBAClB,+DAAa;gBACb,mEAAiB;gBACjB,mFAAiB;aAClB;YACD,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,iEAAgB,EAAE,QAAQ,EAAE,qEAAoB,EAAC,CAAC;YACxE,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnDtB,mB;;;;;;;;;;;ACAA,gLAAgL,WAAW,gBAAgB,qEAAqE,yCAAyC,aAAa,oH;;;;;;;;;;;;;;;;;;;;;;;;;ACApR;AAEQ;AAO1D;IAKE,0BACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAEpC,IAAI,CAAC,UAAU,EAAE;IACnB,CAAC;IAED,mCAAQ,GAAR;IAEA,CAAC;IAED,qCAAU,GAAV;QAAA,iBAKC;QAJC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,gBAAM;YACzC,KAAI,CAAC,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC;YACpC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IApBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAOyB,qEAAa;OAN3B,gBAAgB,CAuB5B;IAAD,uBAAC;CAAA;AAvB4B;;;;;;;;;;;;;;ACT7B;AAAA;IAAA;QAEE,gBAAW,GAAW,EAAE,CAAC;IAC3B,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACH0C;AACoB;AAGJ;AAM3D;IAKE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,kCAAU,GAAV;QACE,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QACzF,IAAM,GAAG,GAAW,qEAAW,CAAC,GAAG,GAAG,cAAc,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,CAAC,QAAQ,EAAE,EAAC,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACpF,CAAC;IAED,iCAAS,GAAT,UAAU,IAAU;QAClB,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QACzF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC9E,CAAC;IAED,kCAAU,GAAV,UAAW,EAAU;QACnB,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QACzF,IAAM,GAAG,GAAW,qEAAW,CAAC,GAAG,GAAG,cAAc,GAAG,EAAE,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACnF,CAAC;IAED,iCAAS,GAAT,UAAU,IAAY,EAAE,KAAa,EAAE,OAAe,EAAE,GAAW;QACjE,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QACzF,IAAM,GAAG,GAAW,qEAAW,CAAC,GAAG,GAAG,aAAa,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,GAAG,CAAC,QAAQ,EAAE,EAAC,EAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAC,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC3I,CAAC;IA5BU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,+DAAU;OALzB,aAAa,CA6BzB;IAAD,oBAAC;CAAA;AA7ByB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViB;AACkB;AAEF;AAK3D;IAKE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,gCAAS,GAAT;QACE,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QACzF,IAAM,GAAG,GAAW,qEAAW,CAAC,GAAG,GAAG,YAAY,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACpF,CAAC;IAED,gCAAS,GAAT,UAAU,EAAU;QAClB,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QACzF,IAAM,GAAG,GAAW,qEAAW,CAAC,GAAG,GAAG,mBAAmB,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,GAAG,CAAC,QAAQ,EAAE,EAAC,EAAC,EAAE,EAAE,EAAE,EAAC,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5F,CAAC;IAED,+BAAQ,GAAR,UAAS,IAAY,EAAE,KAAa,EAAE,KAAa,EAAE,KAAa,EAAE,OAAe,EAAE,GAAW;QAC9F,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAE,OAAO,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QACpH,IAAM,GAAG,GAAW,qEAAW,CAAC,GAAG,GAAG,YAAY,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,GAAG,CAAC,QAAQ,EAAE,EAAC,EAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAC,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACtI,CAAC;IAvBU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,+DAAU;OALzB,YAAY,CAyBxB;IAAD,mBAAC;CAAA;AAzBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRgB;AACoB;AACF;AAQ3D;IAKE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,4CAAe,GAAf,UAAgB,EAAU,EAAE,WAAoB;QAC9C,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAE,QAAQ,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QAClH,IAAM,GAAG,GAAW,qEAAW,CAAC,GAAG,GAAG,2BAA2B,GAAG,WAAW,CAAC;QAChF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5F,CAAC;IAED,2CAAc,GAAd,UAAe,KAAa,EAAE,KAAa;QACzC,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QACzF,IAAM,GAAG,GAAW,qEAAW,CAAC,GAAG,GAAG,kBAAkB,CAAC;QACzD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAA0B,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACvI,CAAC;IAED,4CAAe,GAAf,UAAgB,KAAa,EAAE,GAAa;QAC1C,IAAM,WAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QACzF,IAAM,GAAG,GAAW,qEAAW,CAAC,GAAG,GAAG,sBAAsB,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAkB,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAC,KAAK,SAAE,GAAG,OAAC,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC3G,CAAC;IAxBU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,+DAAU;OALzB,kBAAkB,CAyB9B;IAAD,yBAAC;CAAA;AAzB8B;;;;;;;;;;;;ACV/B,yBAAyB,gBAAgB,GAAG,iBAAiB,sBAAsB,wBAAwB,4BAA4B,wBAAwB,wBAAwB,iBAAiB,iBAAiB,0BAA0B,GAAG,G;;;;;;;;;;;ACAtP,sPAAsP,oEAAoE,wCAAwC,aAAa,4CAA4C,aAAa,8CAA8C,YAAY,gKAAgK,yBAAyB,iH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApmB;AAID;AACE;AACU;AACpB;AACC;AACN;AACc;AAChB;AAEoB;AAQ3D;IAQE,yBACS,QAAqB,EACpB,YAA0B,EAC1B,aAA4B,EAC5B,kBAAsC,EACtC,KAAqB,EACrB,QAAkB,EAClB,YAA0B,EAC1B,MAAc;QAPf,aAAQ,GAAR,QAAQ,CAAa;QACpB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QAVxB,mBAAc,GAAa,CAAC,0BAA0B,EAAE,WAAW,EAAE,mBAAmB,EAAE,SAAS,CAAC,CAAC;QAYnG,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;wBApBU,eAAe;IAsB1B,kCAAQ,GAAR;IAEA,CAAC;IAED,kCAAQ,GAAR,UAAS,KAAY;QAArB,iBAWC;QAVC,EAAE,EAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,EAAC;YACnB,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,KAAK,CAAC;QAExC,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,GAAG,KAAK,OAAO,EAAjB,CAAiB,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,qEAAW,CAAC,YAAY,EAAE,qEAAW,CAAC,aAAa,CAAC,CAAC;QACnF,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAM;YAC5C,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,4BAAY,GAAnB,UAAoB,GAAW,EAAE,IAAU;QACzC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,mCAAS,GAAT;QAAA,iBAOC;QALC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,gBAAM;YACvC,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;YAClC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC;QACzC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,oCAAU,GAAV;QAAA,iBAOC;QANC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,8HAA8H;QAC9H,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAM;YAC3C,KAAI,CAAC,aAAa,CAAC,cAAc,GAAG,MAAM,CAAC;YAC3C,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,CAAC;IAEF,oCAAU,GAAV,UAAW,KAAa;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACxH,CAAC;IAEM,gCAAgB,GAAvB,UAAwB,MAAc;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;IAC5C,CAAC;IAEM,kCAAkB,GAAzB,UAA0B,KAAe;QACvC,MAAM,CAAC,KAAK,CAAC,iBAAe,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,gCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC;QAC9H,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,wCAAc,GAAd,UAAe,KAAa,EAAE,KAAa,EAAE,KAAa;QAA1D,iBAaC;QAZC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,gBAAM;YAC9D,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wCAAwC,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC,EAAC,CAAC;YAClI,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,GAAG,eAAe,GAAG,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,GAAG,mBAAmB,GAAG,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,GAAG,gBAAgB,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE;oBACtN,QAAQ,EAAE,IAAI;oBACd,UAAU,EAAE,CAAC,UAAU,CAAC;iBACzB,CAAC;YACJ,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IA9FU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAUmB,6DAAW;YACN,mEAAY;YACX,qEAAa;YACR,+EAAkB;YAC/B,8DAAc;YACX,wDAAQ;YACJ,sEAAY;YAClB,sDAAM;OAhBb,eAAe,CAgG3B;IAAD,sBAAC;;CAAA;AAhG2B;;;;;;;;;;;;ACrB5B,yBAAyB,gBAAgB,GAAG,qBAAqB,oBAAoB,gBAAgB,GAAG,qBAAqB,qBAAqB,GAAG,K;;;;;;;;;;;ACArJ,+KAA+K,OAAO,6BAA6B,aAAa,2jCAA2jC,cAAc,kMAAkM,eAAe,kMAAkM,eAAe,kMAAkM,eAAe,gMAAgM,0BAA0B,qIAAqI,2BAA2B,6S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3tE;AAES;AACV;AACF;AACT;AACN;AAEmC;AACpB;AACV;AAS9C;IAaE,+BACU,kBAAsC,EACtC,YAA0B,EAC1B,aAA4B,EAC5B,KAAqB,EACrB,QAAkB,EACnB,QAAqB;QAN9B,iBAYC;QAXS,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QACnB,aAAQ,GAAR,QAAQ,CAAa;QAhB9B,qBAAgB,GAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAEjF,cAAS,GAAG,IAAI,uEAAc,CAAkC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC1E,gBAAW,GAAY,KAAK,CAAC;QAe3B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,gBAAM;YACnF,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,kDAAkB,GAA1B;QAAA,iBAQC;QAPC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,gBAAM;YACzF,KAAI,CAAC,kBAAkB,CAAC,eAAe,GAAG,MAAM,CAAC;YACjD,KAAI,CAAC,kBAAkB,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YAC3D,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,CAAC;YAC9D,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,WAAW,CAAC;YACvE,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;IACjF,CAAC;IAED,oDAAoB,GAApB;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,gDAAgB,GAAhB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;QAC/E,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,mBAAmB,GAAG,UAAC,IAAI,EAAE,QAAQ;YACnD,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjB,KAAK,MAAM,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACnD,SAAS,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,2CAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QACxC,CAAC;IACH,CAAC;IAED,6CAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,MAAM,CAAC,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,4CAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACpE,CAAC;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,mCAAG,GAAH;QAAA,iBAmBC;QAjBC,IAAI,GAAG,GAAc,EAAE,CAAC;QAExB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,WAAW;YAC1C,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAM;YAC5E,KAAI,CAAC,kBAAkB,CAAC,eAAe,GAAG,MAAM,CAAC;YACjD,KAAI,CAAC,kBAAkB,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YAC3D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,MAAM,GAAG,eAAe,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC;YACzH,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IAGL,CAAC;IAzFwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;4DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;uDAAC;IAXvB,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAe8B,+EAAkB;YACxB,mEAAY;YACX,qEAAa;YACrB,8DAAc;YACX,wDAAQ;YACT,6DAAW;OAnBnB,qBAAqB,CAsGjC;IAAD,4BAAC;CAAA;AAtGiC;;;;;;;;;;;;;;ACnBlC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,GAAG,EAAE,uBAAuB;IAC5B,YAAY,EAAE,kBAAkB;IAChC,aAAa,EAAE,0BAA0B;CAC1C,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACjBpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"form-container\\\">\\n  <h2>Add Avatar</h2>\\n  <form [formGroup]=\\\"avatarform.getForm()\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Name\\\" #Name formControlName=\\\"name\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Email\\\" #Email formControlName=\\\"email\\\">\\n    </mat-form-field>\\n    <input name=\\\"imageUrl\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"handleInputChange($event)\\\"/>\\n    <button mat-raised-button (click)=\\\"addAvatar()\\\">OK</button>\\n  </form>\\n</div>\\n<div class=\\\"form-container\\\">\\n  <h2>Add Snack</h2>\\n  <form *ngIf=\\\"avatars\\\" [formGroup]=\\\"snackform.getForm()\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Name\\\" #Name formControlName=\\\"name\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Price\\\" #Price formControlName=\\\"price\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Count\\\" #Count formControlName=\\\"count\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Owner\\\" #Owner formControlName=\\\"owner\\\">\\n        <mat-option *ngFor=\\\"let avatar of avatars\\\" [value]=\\\"avatar.id\\\" [ngStyle]=\\\"{'background' : 'url(' + avatar.pic + ')', 'background-size': 'contain', 'background-repeat': 'no-repeat', 'background-position-x': 'right'}\\\" >{{avatar.name}} </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <input name=\\\"imageUrl\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"handleInputChange($event)\\\"/>\\n    <button mat-raised-button (click)=\\\"addSnack()\\\">OK</button>\\n  </form>\\n</div>\\n<button mat-raised-button routerLink=\\\"/\\\">Go Back</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Avatar } from '../model/avatar';\nimport { Snack } from '../model/snack';\nimport {ValidationManager} from \"ng2-validation-manager\";\nimport { AvatarService } from '../service/avatar.service';\nimport { SnackService } from '../service/snack.service';\n\nimport {  FileUploader, FileSelectDirective } from 'ng2-file-upload/ng2-file-upload';\nimport {UploadFile} from \"../model/upload-file\";\n\n@Component({\n  selector: 'app-add-forms',\n  templateUrl: './add-forms.component.html',\n  styleUrls: ['./add-forms.component.css']\n})\nexport class AddFormsComponent implements OnInit {\n\n  avatarform;\n  snackform;\n\n  avatars : Avatar[];\n\n\n  constructor(\n    private avatarService: AvatarService,\n    private snackService: SnackService\n  ) {\n    this.avatarService.getAvatars().then(result => {\n      this.avatarService.avatars = result;\n      this.avatars = this.avatarService.avatars;\n    });\n  }\n\n  ngOnInit() {\n    this.setForm();\n  }\n\n  addAvatar(){\n    const params: Avatar = this.avatarform.getData();\n    this.avatarService.addAvatar(params.name.toString(), params.email.toString(), this.file.imageType,this.file.base64Image).then(result => {\n      this.avatarService.getAvatars().then(result => {\n        this.avatarService.avatars = result;\n        this.avatars = this.avatarService.avatars;\n      });\n    });\n  }\n\n  addSnack(){\n    const params: Snack = this.snackform.getData();\n    this.snackService.addSnack(params.name.toString(), params.price, params.count, params.owner, this.file.imageType,this.file.base64Image).then(result => {\n      this.snackService.getSnacks().then(result =>{\n        this.snackService.snacks = result;\n      });\n    });\n  }\n\n  setForm(){\n    this.avatarform = new ValidationManager({\n      'name': 'required|alphaNumSpace',\n      'email': 'required|email'\n    });\n    this.snackform = new ValidationManager({\n        'name': 'required|alphaNumSpace',\n        'price': 'required|number',\n        'count': 'required|number',\n        'owner': 'required|number'\n    });\n   }\n\n  private file: UploadFile = new UploadFile();\n\n  handleInputChange(e) {\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    var pattern = /image-*/;\n    var reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    this.file.imageType = file.type;\n    reader.readAsDataURL(file);\n  }\n  _handleReaderLoaded(e) {\n    let reader = e.target;\n    this.file.base64Image = reader.result;\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AvatarsComponent }      from './avatars/avatars.component';\nimport { SnacksComponent }      from './snacks/snacks.component';\nimport { AddFormsComponent }      from './add-forms/add-forms.component';\nimport {TransactionsComponent} from \"./transactions/transactions.component\";\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/avatars', pathMatch: 'full' },\n  { path: 'avatars', component: AvatarsComponent },\n  { path: 'add', component: AddFormsComponent },\n  { path: 'snacks/:id', component: SnacksComponent },\n  { path: 'transactions/:id', component: TransactionsComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SnackBar';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { AvatarsComponent } from './avatars/avatars.component';\nimport {\n  MatButtonModule, MatCheckboxModule, MatFormFieldModule,\n  MatIconModule, MatInputModule, MatPaginatorModule, MatProgressSpinnerModule, MatSelectModule,\n  MatSnackBarModule, MatSortModule, MatTableModule\n} from \"@angular/material\";\nimport { SnacksComponent } from './snacks/snacks.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { AddFormsComponent } from './add-forms/add-forms.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport {HashLocationStrategy, LocationStrategy} from \"@angular/common\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AvatarsComponent,\n    SnacksComponent,\n    AddFormsComponent,\n    TransactionsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCheckboxModule,\n    FontAwesomeModule\n  ],\n  providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"avatars\\\" class=\\\"button-container\\\">\\n      <button *ngFor=\\\"let avatar of avatars\\\" mat-raised-button color=\\\"primary\\\" routerLink=\\\"/snacks/{{avatar.id}}\\\" [ngStyle]=\\\"{'background' : 'url(' + avatar.pic + ')', 'background-size': 'cover'}\\\">\\n        <span class=\\\"namelabel\\\">{{avatar.name}}</span>\\n      </button>\\n</div>\\n<button mat-raised-button color=\\\"secondary\\\" routerLink=\\\"/add/\\\">Add</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Avatar } from '../model/avatar';\nimport { AvatarService } from '../service/avatar.service';\n\n@Component({\n  selector: 'app-avatars',\n  templateUrl: './avatars.component.html',\n  styleUrls: ['./avatars.component.css']\n})\nexport class AvatarsComponent implements OnInit {\n\n  // avatars =  this.avatarService.avatars;\n  avatars: Avatar[];\n\n  constructor(\n    private avatarService: AvatarService\n  ) {\n    this.getAvatars()\n  }\n\n  ngOnInit() {\n\n  }\n\n  getAvatars(){\n    this.avatarService.getAvatars().then(result => {\n      this.avatarService.avatars = result;\n      this.avatars = this.avatarService.avatars;\n    });\n  }\n\n\n}\n","export class UploadFile {\n  imageType: string;\n  base64Image: string = '';\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Avatar} from \"../model/avatar\";\nimport {Link} from \"../model/link\";\nimport {environment} from \"../../environments/environment\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AvatarService {\n\n  selectedAvatar: Avatar;\n  avatars: Avatar[];\n\n  constructor(private http: HttpClient) { }\n\n  getAvatars(): Promise<Avatar[]>{\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8'});\n    const url: String = environment.url + '/api/avatar/';\n    return this.http.get<Avatar[]>(url.toString(),{headers: httpHeaders}).toPromise();\n  }\n\n  getAvatar(link: Link): Promise<Avatar>{\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8'});\n    return this.http.get<Avatar>(link.href, {headers: httpHeaders}).toPromise();\n  }\n\n  findAvatar(id: number): Promise<Avatar>{\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8'});\n    const url: String = environment.url + '/api/avatar/' + id;\n    return this.http.get<Avatar>(url.toString(), {headers: httpHeaders}).toPromise();\n  }\n\n  addAvatar(name: string, email: string, pictype: string, pic: string) {\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8'});\n    const url: String = environment.url + '/api/avatar';\n    return this.http.post<Avatar>(url.toString(),{name: name, email: email, pictype: pictype, pic: pic}, {headers: httpHeaders}).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Snack} from \"../model/snack\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackService {\n\n  snacks: Snack[];\n  selectedSnack: Snack;\n\n  constructor(private http: HttpClient) { }\n\n  getSnacks(): Promise<Snack[]>{\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8'});\n    const url: String = environment.url + '/api/snack';\n    return this.http.get<Snack[]>(url.toString(), {headers: httpHeaders}).toPromise();\n  }\n\n  findSnack(id: number): Promise<Snack>{\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8'});\n    const url: String = environment.url + '/api/snack/search';\n    return this.http.post<Snack>(url.toString(),{id: id}, {headers: httpHeaders}).toPromise();\n  }\n\n  addSnack(name: string, price: number, count: number, owner: number, pictype: string, pic: string) {\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8', 'owner': owner.toString()});\n    const url: String = environment.url + '/api/snack';\n    return this.http.post<Snack>(url.toString(),{name: name, price: price, count: count, pic: pic}, {headers: httpHeaders}).toPromise();\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from \"../../environments/environment\";\nimport {TransactionList} from \"../model/transactionList\";\nimport ExpandedTransaction = TRANSACTION.ExpandedTransaction;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionService {\n\n  transactionList: TransactionList;\n  transactions: ExpandedTransaction[];\n\n  constructor(private http: HttpClient) {\n  }\n\n  getTransactions(id: number, paidVisible: boolean): Promise<TransactionList> {\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8', 'userId': id.toString()});\n    const url: String = environment.url + '/api/transaction/my?paid=' + paidVisible;\n    return this.http.get<TransactionList>(url.toString(), {headers: httpHeaders}).toPromise();\n  }\n\n  addTransaction(buyer: number, snack: number) {\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8'});\n    const url: String = environment.url + '/api/transaction';\n    return this.http.post<TRANSACTION.Transaction>(url.toString(), {buyerId: buyer, snackId: snack}, {headers: httpHeaders}).toPromise();\n  }\n\n  payTransactions(buyer: number, ids: number[]): Promise<TransactionList> {\n    const httpHeaders = new HttpHeaders({'Content-type': 'application/json; charset=utf-8'});\n    const url: String = environment.url + '/api/transaction/pay';\n    return this.http.post<TransactionList>(url.toString(), {buyer, ids}, {headers: httpHeaders}).toPromise();\n  }\n}\n","module.exports = \"button{\\n  margin: 5px;\\n}\\n\\n.snackCount {\\n  font-size: 1.5rem;\\n  font-weight: bolder;\\n  background-color: black;\\n  border-radius: 1rem;\\n  padding: 1rem .6rem;\\n  margin: 1rem;\\n  opacity: 0.7;\\n  display: inline-block;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"snacks\\\" class=\\\"button-container\\\">\\n  <ng-container *ngFor=\\\"let snack of snacks\\\">\\n    <button *ngIf=\\\"snack.count > 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSelect(snack)\\\"\\n            [ngStyle]=\\\"{'background' : 'url(' + snack.pic + ')', 'background-size': 'cover'}\\\">\\n      <span class=\\\"snackCount\\\">{{snack.count}}</span>\\n      <span class=\\\"snackCount\\\">{{snack.price}} Kč</span>\\n      <span class=\\\"namelabel\\\">{{snack.name}}</span>\\n    </button>\\n  </ng-container>\\n</div>\\n<button *ngIf=\\\"selectedAvatar\\\" mat-raised-button color=\\\"secondary\\\"\\n        routerLink=\\\"/transactions/{{selectedAvatar.entityId}}\\\">Transactions\\n</button>\\n<button mat-raised-button color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Cancel</button>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Snack} from '../model/snack';\nimport {Avatar} from '../model/avatar';\n\nimport {SnackService} from '../service/snack.service';\nimport {AvatarService} from '../service/avatar.service';\nimport {TransactionService} from '../service/transaction.service';\nimport {MatSnackBar} from \"@angular/material\";\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Router} from \"@angular/router\";\nimport {Link} from \"../model/link\";\nimport {environment} from \"../../environments/environment\";\n\n\n@Component({\n  selector: 'app-snacks',\n  templateUrl: './snacks.component.html',\n  styleUrls: ['./snacks.component.css']\n})\nexport class SnacksComponent implements OnInit {\n\n  snacks: Snack[];\n  selectedAvatar: Avatar;\n  // avatar: Avatar;\n  owner: Avatar;\n  cancel_message: string[] = ['Salary not received yet?', 'Nevermind', 'Come on, take one', 'Coward!'];\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private snackService: SnackService,\n    private avatarService: AvatarService,\n    private transactionService: TransactionService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private domSanitizer: DomSanitizer,\n    private router: Router\n  ) {\n    this.getSnacks();\n    this.findAvatar();\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSelect(snack: Snack): void {\n    if(snack.count <= 0){\n      return;\n    }\n    this.snackService.selectedSnack = snack;\n\n    let link = snack.links.find(f => f.rel === 'owner');\n    link.href = link.href.replace(environment.localAddress, environment.publicAddress);\n    this.avatarService.getAvatar(link).then(result => {\n      this.placeOrder(result);\n    });\n  }\n\n  static getLinkByRel(rel: string, link: Link): Link {\n    if (link.rel === rel) {\n      return link;\n    }\n  }\n\n  getSnacks(): void {\n\n    this.snackService.getSnacks().then(result => {\n      this.snackService.snacks = result;\n      this.snacks = this.snackService.snacks;\n    });\n\n  }\n\n  findAvatar(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    // this.avatarService.findAvatar(id).subscribe(result => {console.log('avatar is ', result);this.avatar = result['data'][0]});\n    this.avatarService.findAvatar(id).then(result => {\n      this.avatarService.selectedAvatar = result;\n      this.selectedAvatar = this.avatarService.selectedAvatar;\n    });\n  };\n\n  placeOrder(owner: Avatar) {\n    this.owner = owner;\n    this.addTransaction(this.owner, this.avatarService.selectedAvatar.entityId, this.snackService.selectedSnack.entityId);\n  }\n\n  static get_random_index(length: number): number {\n    return Math.floor(Math.random() * length);\n  }\n\n  static get_random_message(array: string[]): string {\n    return array[SnacksComponent.get_random_index(array.length)];\n  }\n\n  goBack(): void {\n    this.snackBar.open(SnacksComponent.get_random_message(this.cancel_message), 'Ok', {duration: 2000, panelClass: ['snackbar']});\n    this.location.back();\n  }\n\n  addTransaction(owner: Avatar, buyer: number, snack: number) {\n    this.transactionService.addTransaction(buyer, snack).then(result => {\n      if (owner.entityId === this.avatarService.selectedAvatar.entityId) {\n        this.snackBar.open(\"You won't get any money back this way \" + this.owner.name, 'Ok', {duration: 5000, panelClass: ['snackbar']})\n      }\n      else {\n        this.snackBar.open(this.avatarService.selectedAvatar.name + \" was charged \" + this.snackService.selectedSnack.price + \" money units for \" + this.snackService.selectedSnack.name + \" on behalf of \" + owner.name, 'Ok', {\n          duration: 5000,\n          panelClass: ['snackbar']\n        })\n      }\n      this.router.navigate(['/']);\n    });\n  }\n\n}\n","module.exports = \"table {\\n  width: 100%;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\n.form-container {\\n  text-align: left;\\n}\\n\\n\"","module.exports = \"<mat-checkbox (change)=\\\"changePaymentVisible()\\\"\\n              [(ngModel)]=\\\"paidVisible\\\"> Show paid transactions\\n</mat-checkbox>\\n\\n<div>Total Price: {{total}}</div>\\n<div>Unpaid Price: {{totalUnpaid}}</div>\\n\\n<div *ngIf=\\\"dataSource\\\" class=\\\"form-container\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" matSort>\\n    <ng-container matColumnDef=\\\"select\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                      [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                      [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n        </mat-checkbox>\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                      (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                      [checked]=\\\"selection.isSelected(row)\\\">\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef> Paid</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.paid}}</td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"snack\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Snack</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.snack}}</td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"price\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Price</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}}</td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"owner\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Owner</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.owner}}</td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"time\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Time</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.transactionDate }}</td>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selection.toggle(row)\\\"></tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\\n<button mat-raised-button color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Back</button>\\n<button mat-raised-button color=\\\"secondary\\\" (click)=\\\"Pay()\\\">Pay</button>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\n\nimport { TransactionService } from '../service/transaction.service';\nimport { AvatarService } from '../service/avatar.service';\nimport { SnackService } from '../service/snack.service';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Location} from \"@angular/common\";\nimport {Avatar} from \"../model/avatar\";\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\nimport {SelectionModel} from \"@angular/cdk/collections\";\nimport {MatSnackBar} from \"@angular/material\";\nimport ExpandedTransaction = TRANSACTION.ExpandedTransaction;\nimport {TransactionList} from \"../model/transactionList\";\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\nexport class TransactionsComponent implements OnInit {\n  avatar: Avatar;\n\n  displayedColumns: string[] = ['select', 'id', 'snack', 'owner', 'price', 'time'];\n  dataSource: MatTableDataSource<TRANSACTION.ExpandedTransaction>;\n  selection = new SelectionModel<TRANSACTION.ExpandedTransaction>(true, []);\n  paidVisible: boolean = false;\n  total: number;\n  totalUnpaid: number;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private transactionService: TransactionService,\n    private snackService: SnackService,\n    private avatarService: AvatarService,\n    private route: ActivatedRoute,\n    private location: Location,\n    public snackBar: MatSnackBar,\n  ) {\n    this.avatarService.findAvatar(this.avatarService.selectedAvatar.entityId).then(result => {\n      this.avatar = result;\n      this.reloadTransactions();\n    });\n  }\n\n  private reloadTransactions() {\n    this.transactionService.getTransactions(this.avatar.entityId, this.paidVisible).then(result => {\n      this.transactionService.transactionList = result;\n      this.transactionService.transactions = result.transactions;\n      this.total = this.transactionService.transactionList.totalAll;\n      this.totalUnpaid = this.transactionService.transactionList.totalUnpaid;\n      this.loadTransactions();\n    });\n  }\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.transactionService.transactions);\n  }\n\n  changePaymentVisible(){\n    this.reloadTransactions();\n  }\n\n  loadTransactions(){\n    this.dataSource = new MatTableDataSource(this.transactionService.transactions);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      switch (property) {\n        case 'time': return new Date(item.transactionDate);\n        default: return item[property];\n      }\n    };\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  Pay(){\n\n    let ids : number[] = [];\n\n    this.selection.selected.forEach((transaction) => {\n      if (transaction.paid === false) {\n            ids.push(transaction.id);\n      }\n    });\n\n    this.transactionService.payTransactions(this.avatar.entityId, ids).then(result => {\n      this.transactionService.transactionList = result;\n      this.transactionService.transactions = result.transactions;\n      this.snackBar.open(\"You will pay for \" + ids.length + \" transactions\", 'Ok', {duration: 5000, panelClass: ['snackbar']});\n      this.selection.clear();\n      this.loadTransactions();\n    });\n\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: 'http://localhost:8080',\n  localAddress: '172.16.9.19:8080',\n  publicAddress: 'api.snackbar.petrvich.eu'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}